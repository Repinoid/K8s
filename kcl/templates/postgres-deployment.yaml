{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.dbUser }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.dbPassword }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.dbName }}"
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=scram-sha-256"
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.postgres.dbUser }}"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.postgres.dbUser }}"
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: postgres-data
          emptyDir: {}
{{- end }}
