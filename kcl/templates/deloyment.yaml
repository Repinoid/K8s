{{- if .Values.deployKeycloak }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "my-keycloak-chart.fullname" . }}
  labels:
    app: keycloak
spec:
  serviceName: "{{ include "my-keycloak-chart.fullname" . }}-discovery"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:{{ .Values.postgres.image.tag }}
          command:
            - /bin/sh
            - -c
            - |
              until pg_isready -h postgres -p 5432 -U keycloak; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
          env:
            - name: PGPASSWORD
              value: "{{ .Values.postgres.dbPassword }}"
      containers:
        - name: keycloak
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          args: ["start"]
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: admin
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: admin
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_CACHE
              value: ispn
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KC_CACHE_EMBEDDED_NETWORK_BIND_ADDRESS
              value: "$(POD_IP)"
            - name: KC_DB_URL_DATABASE
              value: '{{ .Values.postgres.dbName }}'
            - name: KC_DB_URL_HOST
              value: '{{ .Values.postgres.dbHost }}'
            - name: KC_DB
              value: postgres
            - name: KC_DB_PASSWORD
              value: '{{ .Values.postgres.dbPassword }}'
            - name: KC_DB_USERNAME
              value: '{{ .Values.postgres.dbUser }}'
            - name: KC_DB_URL_PORT
              value: '{{ .Values.postgres.dbPort }}'
          ports:
            - name: http
              containerPort: 8080
            - name: jgroups
              containerPort: 7800
            - name: jgroups-fd
              containerPort: 57800
          startupProbe:
            httpGet:
              path: /health/started
              port: 9000
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9000
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9000
            periodSeconds: 10
            failureThreshold: 3
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
{{- end }}
