apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-keycloak
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak
spec:
  serviceName: {{ .Release.Name }}-keycloak-discovery
  replicas: {{ .Values.keycloak.replicas }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak
    spec:
      containers:
        - name: keycloak
          image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          args: ["start"]
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: {{ .Values.keycloak.admin.username | quote }}
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: {{ .Values.keycloak.admin.password | quote }}
            - name: KC_PROXY_HEADERS
              value: {{ .Values.keycloak.proxy.headers | quote }}
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_CACHE
              value: ispn
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KC_CACHE_EMBEDDED_NETWORK_BIND_ADDRESS
              value: $(POD_IP)
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.keycloak.database.name | quote }}
            - name: KC_DB_URL_HOST
              value: {{ .Values.keycloak.database.host | quote }}
            - name: KC_DB
              value: postgres
            - name: KC_DB_PASSWORD
              value: {{ .Values.keycloak.database.password | quote }}
            - name: KC_DB_USERNAME
              value: {{ .Values.keycloak.database.username | quote }}
          ports:
            - name: http
              containerPort: 8080
            - name: jgroups
              containerPort: 7800
            - name: jgroups-fd
              containerPort: 57800
          startupProbe:
            httpGet:
              path: /health/started
              port: 9000
            periodSeconds: 1
            failureThreshold: 600
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9000
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9000
            periodSeconds: 10
            failureThreshold: 3
          resources:
            {{- toYaml .Values.keycloak.resources | nindent 12 }}
            