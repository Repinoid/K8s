apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  labels:
    app: keycloak
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: http
      name: http
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak
  name: keycloak-discovery
spec:
  selector:
    app: keycloak
  clusterIP: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  serviceName: keycloak-discovery
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:15
          command: 
            - /bin/sh
            - -c
            - |
              until pg_isready -h postgres -p 5432 -U {{ .Values.postgres.dbUser }}; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
          env:
            - name: PGPASSWORD
              value: "keycloak"
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.4.2
          args: ["start"]
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: "{{ .Values.postgres.KC_BOOTSTRAP_ADMIN_USERNAME }}"
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: "{{ .Values.postgres.KC_BOOTSTRAP_ADMIN_PASSWORD }}"
            - name: KC_PROXY_HEADERS
              value: "xforwarded"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_CACHE
              value: "ispn"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KC_CACHE_EMBEDDED_NETWORK_BIND_ADDRESS
              value: '$(POD_IP)'
            - name: KC_DB_URL_DATABASE
              value: '{{ .Values.postgres.dbName }}'
            - name: KC_DB_URL_HOST
              value: 'postgres'
            - name: KC_DB
              value: 'postgres'
            - name: KC_DB_PASSWORD
              value: '{{ .Values.postgres.dbPassword }}'
              # value: 'keycloak'
            - name: KC_DB_USERNAME
              value: '{{ .Values.postgres.dbUser }}'
            - name: KC_DB_URL_PORT
              value: '5432'
          ports:
            - name: http
              containerPort: 8080
            - name: jgroups
              containerPort: 7800
            - name: jgroups-fd
              containerPort: 57800
          startupProbe:
            httpGet:
              path: /health/started
              port: 9000
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9000
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9000
            periodSeconds: 10
            failureThreshold: 3
          resources:
            limits:
              cpu: 2000m
              memory: 2000Mi
            requests:
              cpu: 500m
              memory: 1700Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.dbUser }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.dbPassword }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.dbName }}"
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=scram-sha-256"
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.dbUser }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.dbUser }}
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: postgres-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: keycloak-tls-secret
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /
        pathType: Prefix 
        backend:
          service:
            name: keycloak-service
            port:
              number: 8080