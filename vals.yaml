server:
  workers: 1
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: DEBUG
  config:
    path: /etc/trino
    coordinator: true
    node-scheduler.include-coordinator: false
    http-server.http.port: 8080
    http-server.https.enabled: false  # ← ОТКЛЮЧИТЕ HTTPS в Trino
    http-server.authentication.type: oauth2
    http-server.authentication.oauth2.issuer: "https://keycloak.k8c.ru/auth/realms/trin"
    http-server.authentication.oauth2.client-id: "trino"
    http-server.authentication.oauth2.client-secret: "TfphnwaykhpKdvgBSW6DAJfGmZk2EkTD"
    http-server.authentication.oauth2.redirect-url: "https://trinoid.k8c.ru/ui/oauth2/callback"  # ← ПОЛНЫЙ URL
    http-server.authentication.oauth2.scopes: "openid"
    discovery.uri: "http://trino:8080"  # ← ВНУТРЕННИЙ HTTP URL
    web-ui.enabled: true
    query.max-memory: "4GB"
    http-server.process-forwarded: true  # ← ДОБАВЬТЕ ЭТО
  exchangeManager: {}

# Уберите секреты с сертификатами, так как HTTPS будет на Ingress
coordinator:
  extraVolumes:
    - name: access-control
      configMap:
        name: trino-access-control
  extraVolumeMounts:
    - name: access-control
      mountPath: /etc/trino/access-control
  
worker:
  extraVolumes:
    - name: access-control
      configMap:
        name: trino-access-control
  extraVolumeMounts:
    - name: access-control
      mountPath: /etc/trino/access-control

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"  # ← ИЗМЕНИТЕ на HTTP
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"

  hosts:
    - host: trinoid.k8c.ru
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: trino
              port:
                number: 8080  # ← ИЗМЕНИТЕ на 8080
  tls:
    - secretName: trinoid-secret
      hosts:
        - trinoid.k8c.ru

# accessControl остается без изменений
accessControl:
  type: configmap
  refreshPeriod: 60s
  configFile: "rules.json"
  rules:
    rules.json: |-
      {
        "catalogs": [
          {
            "user": "trino",
            "catalog": ".*",
            "allow": "all"
          },
          {
            "user": "trinod", 
            "catalog": ".*",
            "allow": "all"
          },
          {
            "catalog": "system",
            "allow": "all"
          },
          {
            "catalog": "tpch",
            "allow": "all"
          },
          {
            "catalog": "tpcds",
            "allow": "all"
          }
        ],
        "schemas": [
          {
            "user": "trino",
            "catalog": ".*",
            "schema": ".*",
            "owner": true
          },
          {
            "user": "trinod",
            "catalog": ".*", 
            "schema": ".*",
            "owner": true
          },
          {
            "catalog": "system",
            "schema": ".*",
            "owner": true
          },
          {
            "catalog": "tpch",
            "schema": ".*",
            "owner": true
          },
          {
            "catalog": "tpcds", 
            "schema": ".*",
            "owner": true
          }
        ],
        "tables": [
          {
            "catalog": "system",
            "schema": "jdbc",
            "table": ".*",
            "privileges": ["SELECT"]
          },
          {
            "catalog": "system", 
            "schema": "information_schema",
            "table": ".*",
            "privileges": ["SELECT"]
          }
        ]
      }
additionalConfigProperties:
  - http-server.process-forwarded=true

# Ingress принимает HTTPS трафик на порту 443 с валидным сертификатом от Let's Encrypt

# Ingress проксирует трафик на Trino по HTTP на порту 8080

# Trino работает в HTTP режиме, но получает правильные заголовки благодаря http-server.process-forwarded=true

# OAuth2 redirect работает через публичный URL