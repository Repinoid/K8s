# vals.yaml

server:
  workers: 1
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: DEBUG
  config:
    path: /etc/trino
    https:
      enabled: true   # Включаем HTTPS
      port: 8443     # Используем стандартный порт для HTTPS
      keystore:
        path: "/opt/trino/trinoid.pem"  
    # authenticationType: ""           # Оставляем пустое значение, если аутентификация не настроена
    query:
      maxMemory: "4GB"
  exchangeManager: {}

additionalConfigProperties:
  - http-server.process-forwarded=true
  - http-server.authentication.type=oauth2
  - http-server.https.port=8443
  - http-server.https.enabled=true
  - http-server.authentication.oauth2.issuer=https://keycloak.k8c.ru/realms/trin
  - http-server.authentication.oauth2.client-id=trinner
  - http-server.authentication.oauth2.client-secret=TfphnwaykhpKdvgBSW6DAJfGmZk2EkTD  
  - internal-communication.shared-secret=trino-prod-internal-$(date +%s)
  - http-server.process-forwarded=true


coordinator:
  secretMounts:
    - name: trino-tls
      secretName: trinoid-secret
      path: /opt/trino/trinoid.pem
      subPath: trinoid.pem

  extraVolumes:
    - name: access-control
      configMap:
        name: trino-access-control

  extraVolumeMounts:
    - name: access-control
      mountPath: /etc/trino/access-control
  
worker:
  secretMounts:
    - name: trino-tls
      secretName: trinoid-secret
      path: /opt/trino/trinoid.pem
      subPath: trinoid.pem

  extraVolumes:
    - name: access-control
      configMap:
        name: trino-access-control
  extraVolumeMounts:
    - name: access-control
      mountPath: /etc/trino/access-control
   
accessControl:
  type: configmap
  refreshPeriod: 60s
  configFile: "rules.json"
  rules:
    rules.json: |-
      {
        "catalogs": [
          {
            "user": "trino",
            "catalog": ".*",
            "allow": "all"
          },
          {
            "user": "trinod", 
            "catalog": ".*",
            "allow": "all"
          },
          {
            "catalog": "system",
            "allow": "all"
          },
          {
            "catalog": "tpch",
            "allow": "all"
          },
          {
            "catalog": "tpcds",
            "allow": "all"
          }
        ],
        "schemas": [
          {
            "user": "trino",
            "catalog": ".*",
            "schema": ".*",
            "owner": true
          },
          {
            "user": "trinod",
            "catalog": ".*", 
            "schema": ".*",
            "owner": true
          },
          {
            "catalog": "system",
            "schema": ".*",
            "owner": true
          },
          {
            "catalog": "tpch",
            "schema": ".*",
            "owner": true
          },
          {
            "catalog": "tpcds", 
            "schema": ".*",
            "owner": true
          }
        ],
        "tables": [
          {
            "catalog": "system",
            "schema": "jdbc",
            "table": ".*",
            "privileges": ["SELECT"]
          },
          {
            "catalog": "system", 
            "schema": "information_schema",
            "table": ".*",
            "privileges": ["SELECT"]
          }
        ]
      }


ingress:
  enabled: true
  className: nginx
  annotations:
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # nginx.ingress.kubernetes.io/use-forwarded-headers: "true"

    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"  # ← Важно!
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"

  hosts:
    - host: trinoid.k8c.ru
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: trino
              port:
                number: 8443
  tls:
    - secretName: trinoid-secret
      hosts:
        - trinoid.k8c.ru

# additionalConfigProperties:
  
#   # - http-server.https.enabled=true