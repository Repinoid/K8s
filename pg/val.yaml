# val.yaml - Все кастомные настройки для Bitnami PostgreSQL

## Global parameters
global:
  storageClass: ""
  security:
    allowInsecureImages: true

## Image settings
image:
  registry:   docker.io
  repository: bitnamilegacy/postgresql  # Изменено на legacy репозиторий
  tag:        "17.6.0-debian-12-r4"           # Конкретный стабильный тег
  pullPolicy: IfNotPresent

## Authentication
auth:
  database: "mdb"
  username: "muser" 
  password: "mpass"
  enablePostgresUser: true

## PostgreSQL configuration
primary:
  name: primary
  
  # Конфигурация PostgreSQL (кастомные настройки)
  configuration: |
    listen_addresses = '*'
    max_connections = 100
    shared_buffers = 256MB
    effective_cache_size = 1GB
  
  # Persistence (кастомные настройки)
  persistence:
    enabled: true
    storageClass: "standard"
    size: "10Gi"
    accessModes:
      - ReadWriteOnce
    mountPath: "/var/lib/postgresql/data"
  
  # ⭐⭐ КАСТОМНЫЕ СКРИПТЫ ИНИЦИАЛИЗАЦИИ ТАБЛИЦ ⭐⭐
  initdb:
    scripts:
      01-init-iceberg-tables.sql: |
        -- Создание таблицы для свойств namespace Iceberg
        CREATE TABLE IF NOT EXISTS iceberg_namespace_properties (
          catalog_name VARCHAR(255) NOT NULL,
          namespace VARCHAR(255) NOT NULL,
          property_key VARCHAR(5500),
          property_value VARCHAR(5500),
          PRIMARY KEY (catalog_name, namespace, property_key)
        );
        
        -- Создание таблицы для метаданных таблиц Iceberg
        CREATE TABLE IF NOT EXISTS iceberg_tables (
          catalog_name VARCHAR(255) NOT NULL,
          table_namespace VARCHAR(255) NOT NULL,
          table_name VARCHAR(255) NOT NULL,
          metadata_location VARCHAR(5500),
          previous_metadata_location VARCHAR(5500),
          PRIMARY KEY (catalog_name, table_namespace, table_name)
        );
        
        -- Создание индексов для улучшения производительности
        CREATE INDEX IF NOT EXISTS idx_iceberg_tables_metadata_location 
        ON iceberg_tables(metadata_location);
        
        CREATE INDEX IF NOT EXISTS idx_iceberg_namespace_properties_value 
        ON iceberg_namespace_properties(property_value);
        
        -- Комментарии к таблицам
        COMMENT ON TABLE iceberg_namespace_properties IS 'Хранилище свойств namespace для Apache Iceberg';
        COMMENT ON TABLE iceberg_tables IS 'Хранилище метаданных таблиц Apache Iceberg';
  
  # Security context
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
  
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  
  # Ресурсы (кастомные настройки)
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  # Дополнительные переменные окружения
  # extraEnvVars:
  #   - name: PGDATA
  #     value: "/var/lib/postgresql/data/pgdata"

## Architecture
architecture: standalone

## Service account
serviceAccount:
  create: true

## Read replicas
readReplicas:
  replicaCount: 0

## Volume permissions
volumePermissions:
  enabled: true

postgresqlDataDir: /var/lib/postgresql/data