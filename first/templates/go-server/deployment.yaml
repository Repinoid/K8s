apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-go-server
  annotations:
    debug-info: "Current Release Name is '{{ .Release.Name }}'"
  labels:
    app: {{ .Release.Name }}-go-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-go-server
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-go-server
        component: server
    spec:
      containers:
      - name: go-server
        image: "{{ .Values.goServer.image.repository }}:{{ .Values.goServer.image.tag }}"
        ports:
        - containerPort: {{ .Values.goServer.port }}
        env:
        - name: ADDRESS
          value: {{ .Values.goServer.env.ADDRESS | quote }}
        - name: DATABASE_DSN
          # TESSSSST ! 
          value: "host={{ .Release.Name }}-postgresql user={{ .Values.postgresql.auth.username }} password={{ .Values.postgresql.auth.password }} dbname={{ .Values.postgresql.auth.database }} sslmode=disable"
          #value: {{ .Values.goServer.env.DATABASE_DSN | quote }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.goServer.port }}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.goServer.port }}